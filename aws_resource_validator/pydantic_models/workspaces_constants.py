from typing import Literal, Union, Optional, List, Dict, Any, Sequence, Mapping, IO
from datetime import datetime

AccessPropertyValueType = Literal["ALLOW", "DENY"]
AccountLinkStatusEnumType = Literal["LINKED", "LINKING_FAILED", "LINK_NOT_FOUND", "PENDING_ACCEPTANCE_BY_TARGET_ACCOUNT", "REJECTED"]
ApplicationAssociatedResourceTypeType = Literal["BUNDLE", "IMAGE", "WORKSPACE"]
ApplicationSettingsStatusEnumType = Literal["DISABLED", "ENABLED"]
ApplicationType = Literal["Microsoft_Office_2016", "Microsoft_Office_2019"]
AssociationErrorCodeType = Literal["DeploymentError.InternalServerError",
    "DeploymentError.WorkspaceUnreachable",
    "ValidationError.InsufficientDiskSpace",
    "ValidationError.InsufficientMemory",
    "ValidationError.UnsupportedOperatingSystem",]
AssociationStateType = Literal["COMPLETED",
    "ERROR",
    "INSTALLING",
    "PENDING_INSTALL",
    "PENDING_INSTALL_DEPLOYMENT",
    "PENDING_UNINSTALL",
    "PENDING_UNINSTALL_DEPLOYMENT",
    "REMOVED",
    "UNINSTALLING",]
AssociationStatusType = Literal["ASSOCIATED_WITH_OWNER_ACCOUNT",
    "ASSOCIATED_WITH_SHARED_ACCOUNT",
    "NOT_ASSOCIATED",
    "PENDING_ASSOCIATION",
    "PENDING_DISASSOCIATION",]
AuthenticationTypeType = Literal["SAML"]
BundleAssociatedResourceTypeType = Literal["APPLICATION"]
BundleTypeType = Literal["REGULAR", "STANDBY"]
CertificateBasedAuthStatusEnumType = Literal["DISABLED", "ENABLED"]
ClientDeviceTypeType = Literal["DeviceTypeAndroid",
    "DeviceTypeIos",
    "DeviceTypeLinux",
    "DeviceTypeOsx",
    "DeviceTypeWeb",
    "DeviceTypeWindows",]
ComputeType = Literal["GRAPHICS",
    "GRAPHICSPRO",
    "GRAPHICSPRO_G4DN",
    "GRAPHICS_G4DN",
    "PERFORMANCE",
    "POWER",
    "POWERPRO",
    "STANDARD",
    "VALUE",]
ConnectionAliasStateType = Literal["CREATED", "CREATING", "DELETING"]
ConnectionStateType = Literal["CONNECTED", "DISCONNECTED", "UNKNOWN"]
DataReplicationType = Literal["NO_REPLICATION", "PRIMARY_AS_SOURCE"]
DedicatedTenancyAccountTypeType = Literal["SOURCE_ACCOUNT", "TARGET_ACCOUNT"]
DedicatedTenancyModificationStateEnumType = Literal["COMPLETED", "FAILED", "PENDING"]
DedicatedTenancySupportEnumType = Literal["ENABLED"]
DedicatedTenancySupportResultEnumType = Literal["DISABLED", "ENABLED"]
DeletableCertificateBasedAuthPropertyType = Literal["CERTIFICATE_BASED_AUTH_PROPERTIES_CERTIFICATE_AUTHORITY_ARN"]
DeletableSamlPropertyType = Literal["SAML_PROPERTIES_RELAY_STATE_PARAMETER_NAME", "SAML_PROPERTIES_USER_ACCESS_URL"]
DescribeAccountModificationsPaginatorName = Literal["describe_account_modifications"]
DescribeIpGroupsPaginatorName = Literal["describe_ip_groups"]
DescribeWorkspaceBundlesPaginatorName = Literal["describe_workspace_bundles"]
DescribeWorkspaceDirectoriesPaginatorName = Literal["describe_workspace_directories"]
DescribeWorkspaceImagesPaginatorName = Literal["describe_workspace_images"]
DescribeWorkspacesConnectionStatusPaginatorName = Literal["describe_workspaces_connection_status"]
DescribeWorkspacesPaginatorName = Literal["describe_workspaces"]
DescribeWorkspacesPoolsFilterNameType = Literal["PoolName"]
DescribeWorkspacesPoolsFilterOperatorType = Literal["CONTAINS", "EQUALS", "NOTCONTAINS", "NOTEQUALS"]
ImageAssociatedResourceTypeType = Literal["APPLICATION"]
ImageTypeType = Literal["OWNED", "SHARED"]
ListAccountLinksPaginatorName = Literal["list_account_links"]
ListAvailableManagementCidrRangesPaginatorName = Literal["list_available_management_cidr_ranges"]
LogUploadEnumType = Literal["DISABLED", "ENABLED"]
ModificationResourceEnumType = Literal["COMPUTE_TYPE", "ROOT_VOLUME", "USER_VOLUME"]
ModificationStateEnumType = Literal["UPDATE_INITIATED", "UPDATE_IN_PROGRESS"]
OperatingSystemNameType = Literal["AMAZON_LINUX_2",
    "RHEL_8",
    "UBUNTU_18_04",
    "UBUNTU_20_04",
    "UBUNTU_22_04",
    "UNKNOWN",
    "WINDOWS_10",
    "WINDOWS_11",
    "WINDOWS_7",
    "WINDOWS_SERVER_2016",
    "WINDOWS_SERVER_2019",
    "WINDOWS_SERVER_2022",]
OperatingSystemTypeType = Literal["LINUX", "WINDOWS"]
ProtocolType = Literal["PCOIP", "WSP"]
ReconnectEnumType = Literal["DISABLED", "ENABLED"]
RunningModeType = Literal["ALWAYS_ON", "AUTO_STOP", "MANUAL"]
SamlStatusEnumType = Literal["DISABLED", "ENABLED", "ENABLED_WITH_DIRECTORY_LOGIN_FALLBACK"]
SessionConnectionStateType = Literal["CONNECTED", "NOT_CONNECTED"]
StandbyWorkspaceRelationshipTypeType = Literal["PRIMARY", "STANDBY"]
StorageConnectorStatusEnumType = Literal["DISABLED", "ENABLED"]
StorageConnectorTypeEnumType = Literal["HOME_FOLDER"]
StreamingExperiencePreferredProtocolEnumType = Literal["TCP", "UDP"]
TargetWorkspaceStateType = Literal["ADMIN_MAINTENANCE", "AVAILABLE"]
TenancyType = Literal["DEDICATED", "SHARED"]
UserIdentityTypeType = Literal["AWS_DIRECTORY_SERVICE", "CUSTOMER_MANAGED"]
UserSettingActionEnumType = Literal["CLIPBOARD_COPY_FROM_LOCAL_DEVICE",
    "CLIPBOARD_COPY_TO_LOCAL_DEVICE",
    "PRINTING_TO_LOCAL_DEVICE",
    "SMART_CARD",]
UserSettingPermissionEnumType = Literal["DISABLED", "ENABLED"]
WorkSpaceApplicationLicenseTypeType = Literal["LICENSED", "UNLICENSED"]
WorkSpaceApplicationStateType = Literal["AVAILABLE", "ERROR", "PENDING", "UNINSTALL_ONLY"]
WorkSpaceAssociatedResourceTypeType = Literal["APPLICATION"]
WorkspaceBundleStateType = Literal["AVAILABLE", "ERROR", "PENDING"]
WorkspaceDirectoryStateType = Literal["DEREGISTERED", "DEREGISTERING", "ERROR", "REGISTERED", "REGISTERING"]
WorkspaceDirectoryTypeType = Literal["AD_CONNECTOR", "CUSTOMER_MANAGED", "SIMPLE_AD"]
WorkspaceImageErrorDetailCodeType = Literal["AdditionalDrivesAttached",
    "AntiVirusInstalled",
    "AutoLogonEnabled",
    "AutoMountDisabled",
    "AzureDomainJoined",
    "DHCPDisabled",
    "DiskFreeSpace",
    "DiskSizeExceeded",
    "DomainJoined",
    "FirewallEnabled",
    "InPlaceUpgrade",
    "IncompatiblePartitioning",
    "MultipleBootPartition",
    "OSNotSupported",
    "OfficeInstalled",
    "OutdatedPowershellVersion",
    "PCoIPAgentInstalled",
    "PendingReboot",
    "RealTimeUniversalDisabled",
    "Requires64BitOS",
    "UEFINotSupported",
    "VMWareToolsInstalled",
    "WindowsUpdatesEnabled",
    "WorkspacesBYOLAccountDisabled",
    "WorkspacesBYOLAccountNotFound",
    "ZeroRearmCount",]
WorkspaceImageIngestionProcessType = Literal["BYOL_GRAPHICS",
    "BYOL_GRAPHICSPRO",
    "BYOL_GRAPHICS_G4DN",
    "BYOL_GRAPHICS_G4DN_BYOP",
    "BYOL_REGULAR",
    "BYOL_REGULAR_BYOP",
    "BYOL_REGULAR_WSP",]
WorkspaceImageRequiredTenancyType = Literal["DEDICATED", "DEFAULT"]
WorkspaceImageStateType = Literal["AVAILABLE", "ERROR", "PENDING"]
WorkspaceStateType = Literal["ADMIN_MAINTENANCE",
    "AVAILABLE",
    "ERROR",
    "IMPAIRED",
    "MAINTENANCE",
    "PENDING",
    "REBOOTING",
    "REBUILDING",
    "RESTORING",
    "STARTING",
    "STOPPED",
    "STOPPING",
    "SUSPENDED",
    "TERMINATED",
    "TERMINATING",
    "UNHEALTHY",
    "UPDATING",]
WorkspaceTypeType = Literal["PERSONAL", "POOLS"]
WorkspacesPoolErrorCodeType = Literal["BUNDLE_NOT_FOUND",
    "DEFAULT_OU_IS_MISSING",
    "DIRECTORY_NOT_FOUND",
    "DOMAIN_JOIN_ERROR_ACCESS_DENIED",
    "DOMAIN_JOIN_ERROR_DS_MACHINE_ACCOUNT_QUOTA_EXCEEDED",
    "DOMAIN_JOIN_ERROR_FILE_NOT_FOUND",
    "DOMAIN_JOIN_ERROR_INVALID_PARAMETER",
    "DOMAIN_JOIN_ERROR_LOGON_FAILURE",
    "DOMAIN_JOIN_ERROR_MORE_DATA",
    "DOMAIN_JOIN_ERROR_NOT_SUPPORTED",
    "DOMAIN_JOIN_ERROR_NO_SUCH_DOMAIN",
    "DOMAIN_JOIN_ERROR_SECRET_ACTION_PERMISSION_IS_MISSING",
    "DOMAIN_JOIN_ERROR_SECRET_DECRYPTION_FAILURE",
    "DOMAIN_JOIN_ERROR_SECRET_INVALID",
    "DOMAIN_JOIN_ERROR_SECRET_NOT_FOUND",
    "DOMAIN_JOIN_ERROR_SECRET_STATE_INVALID",
    "DOMAIN_JOIN_ERROR_SECRET_VALUE_KEY_NOT_FOUND",
    "DOMAIN_JOIN_INTERNAL_SERVICE_ERROR",
    "DOMAIN_JOIN_NERR_INVALID_WORKGROUP_NAME",
    "DOMAIN_JOIN_NERR_PASSWORD_EXPIRED",
    "DOMAIN_JOIN_NERR_WORKSTATION_NOT_STARTED",
    "IAM_SERVICE_ROLE_IS_MISSING",
    "IAM_SERVICE_ROLE_MISSING_DESCRIBE_SECURITY_GROUPS_ACTION",
    "IAM_SERVICE_ROLE_MISSING_DESCRIBE_SUBNET_ACTION",
    "IAM_SERVICE_ROLE_MISSING_ENI_CREATE_ACTION",
    "IAM_SERVICE_ROLE_MISSING_ENI_DELETE_ACTION",
    "IAM_SERVICE_ROLE_MISSING_ENI_DESCRIBE_ACTION",
    "IGW_NOT_ATTACHED",
    "IMAGE_NOT_FOUND",
    "INSUFFICIENT_PERMISSIONS_ERROR",
    "INTERNAL_SERVICE_ERROR",
    "INVALID_SUBNET_CONFIGURATION",
    "MACHINE_ROLE_IS_MISSING",
    "NETWORK_INTERFACE_LIMIT_EXCEEDED",
    "SECURITY_GROUPS_NOT_FOUND",
    "STS_DISABLED_IN_REGION",
    "SUBNET_HAS_INSUFFICIENT_IP_ADDRESSES",
    "SUBNET_NOT_FOUND",
    "WORKSPACES_POOL_INSTANCE_PROVISIONING_FAILURE",
    "WORKSPACES_POOL_STOPPED",]
WorkspacesPoolStateType = Literal["CREATING", "DELETING", "RUNNING", "STARTING", "STOPPED", "STOPPING", "UPDATING"]
WorkSpacesServiceName = Literal["workspaces"]
ServiceName = Literal["accessanalyzer",
    "account",
    "acm",
    "acm-pca",
    "amp",
    "amplify",
    "amplifybackend",
    "amplifyuibuilder",
    "apigateway",
    "apigatewaymanagementapi",
    "apigatewayv2",
    "appconfig",
    "appconfigdata",
    "appfabric",
    "appflow",
    "appintegrations",
    "application-autoscaling",
    "application-insights",
    "application-signals",
    "applicationcostprofiler",
    "appmesh",
    "apprunner",
    "appstream",
    "appsync",
    "apptest",
    "arc-zonal-shift",
    "artifact",
    "athena",
    "auditmanager",
    "autoscaling",
    "autoscaling-plans",
    "b2bi",
    "backup",
    "backup-gateway",
    "batch",
    "bcm-data-exports",
    "bedrock",
    "bedrock-agent",
    "bedrock-agent-runtime",
    "bedrock-runtime",
    "billingconductor",
    "braket",
    "budgets",
    "ce",
    "chatbot",
    "chime",
    "chime-sdk-identity",
    "chime-sdk-media-pipelines",
    "chime-sdk-meetings",
    "chime-sdk-messaging",
    "chime-sdk-voice",
    "cleanrooms",
    "cleanroomsml",
    "cloud9",
    "cloudcontrol",
    "clouddirectory",
    "cloudformation",
    "cloudfront",
    "cloudfront-keyvaluestore",
    "cloudhsm",
    "cloudhsmv2",
    "cloudsearch",
    "cloudsearchdomain",
    "cloudtrail",
    "cloudtrail-data",
    "cloudwatch",
    "codeartifact",
    "codebuild",
    "codecatalyst",
    "codecommit",
    "codeconnections",
    "codedeploy",
    "codeguru-reviewer",
    "codeguru-security",
    "codeguruprofiler",
    "codepipeline",
    "codestar",
    "codestar-connections",
    "codestar-notifications",
    "cognito-identity",
    "cognito-idp",
    "cognito-sync",
    "comprehend",
    "comprehendmedical",
    "compute-optimizer",
    "config",
    "connect",
    "connect-contact-lens",
    "connectcampaigns",
    "connectcases",
    "connectparticipant",
    "controlcatalog",
    "controltower",
    "cost-optimization-hub",
    "cur",
    "customer-profiles",
    "databrew",
    "dataexchange",
    "datapipeline",
    "datasync",
    "datazone",
    "dax",
    "deadline",
    "detective",
    "devicefarm",
    "devops-guru",
    "directconnect",
    "discovery",
    "dlm",
    "dms",
    "docdb",
    "docdb-elastic",
    "drs",
    "ds",
    "dynamodb",
    "dynamodbstreams",
    "ebs",
    "ec2",
    "ec2-instance-connect",
    "ecr",
    "ecr-public",
    "ecs",
    "efs",
    "eks",
    "eks-auth",
    "elastic-inference",
    "elasticache",
    "elasticbeanstalk",
    "elastictranscoder",
    "elb",
    "elbv2",
    "emr",
    "emr-containers",
    "emr-serverless",
    "entityresolution",
    "es",
    "events",
    "evidently",
    "finspace",
    "finspace-data",
    "firehose",
    "fis",
    "fms",
    "forecast",
    "forecastquery",
    "frauddetector",
    "freetier",
    "fsx",
    "gamelift",
    "glacier",
    "globalaccelerator",
    "glue",
    "grafana",
    "greengrass",
    "greengrassv2",
    "groundstation",
    "guardduty",
    "health",
    "healthlake",
    "iam",
    "identitystore",
    "imagebuilder",
    "importexport",
    "inspector",
    "inspector-scan",
    "inspector2",
    "internetmonitor",
    "iot",
    "iot-data",
    "iot-jobs-data",
    "iot1click-devices",
    "iot1click-projects",
    "iotanalytics",
    "iotdeviceadvisor",
    "iotevents",
    "iotevents-data",
    "iotfleethub",
    "iotfleetwise",
    "iotsecuretunneling",
    "iotsitewise",
    "iotthingsgraph",
    "iottwinmaker",
    "iotwireless",
    "ivs",
    "ivs-realtime",
    "ivschat",
    "kafka",
    "kafkaconnect",
    "kendra",
    "kendra-ranking",
    "keyspaces",
    "kinesis",
    "kinesis-video-archived-media",
    "kinesis-video-media",
    "kinesis-video-signaling",
    "kinesis-video-webrtc-storage",
    "kinesisanalytics",
    "kinesisanalyticsv2",
    "kinesisvideo",
    "kms",
    "lakeformation",
    "lambda",
    "launch-wizard",
    "lex-models",
    "lex-runtime",
    "lexv2-models",
    "lexv2-runtime",
    "license-manager",
    "license-manager-linux-subscriptions",
    "license-manager-user-subscriptions",
    "lightsail",
    "location",
    "logs",
    "lookoutequipment",
    "lookoutmetrics",
    "lookoutvision",
    "m2",
    "machinelearning",
    "macie2",
    "mailmanager",
    "managedblockchain",
    "managedblockchain-query",
    "marketplace-agreement",
    "marketplace-catalog",
    "marketplace-deployment",
    "marketplace-entitlement",
    "marketplacecommerceanalytics",
    "mediaconnect",
    "mediaconvert",
    "medialive",
    "mediapackage",
    "mediapackage-vod",
    "mediapackagev2",
    "mediastore",
    "mediastore-data",
    "mediatailor",
    "medical-imaging",
    "memorydb",
    "meteringmarketplace",
    "mgh",
    "mgn",
    "migration-hub-refactor-spaces",
    "migrationhub-config",
    "migrationhuborchestrator",
    "migrationhubstrategy",
    "mobile",
    "mq",
    "mturk",
    "mwaa",
    "neptune",
    "neptune-graph",
    "neptunedata",
    "network-firewall",
    "networkmanager",
    "networkmonitor",
    "nimble",
    "oam",
    "omics",
    "opensearch",
    "opensearchserverless",
    "opsworks",
    "opsworkscm",
    "organizations",
    "osis",
    "outposts",
    "panorama",
    "payment-cryptography",
    "payment-cryptography-data",
    "pca-connector-ad",
    "pca-connector-scep",
    "personalize",
    "personalize-events",
    "personalize-runtime",
    "pi",
    "pinpoint",
    "pinpoint-email",
    "pinpoint-sms-voice",
    "pinpoint-sms-voice-v2",
    "pipes",
    "polly",
    "pricing",
    "privatenetworks",
    "proton",
    "qbusiness",
    "qconnect",
    "qldb",
    "qldb-session",
    "quicksight",
    "ram",
    "rbin",
    "rds",
    "rds-data",
    "redshift",
    "redshift-data",
    "redshift-serverless",
    "rekognition",
    "repostspace",
    "resiliencehub",
    "resource-explorer-2",
    "resource-groups",
    "resourcegroupstaggingapi",
    "robomaker",
    "rolesanywhere",
    "route53",
    "route53-recovery-cluster",
    "route53-recovery-control-config",
    "route53-recovery-readiness",
    "route53domains",
    "route53profiles",
    "route53resolver",
    "rum",
    "s3",
    "s3control",
    "s3outposts",
    "sagemaker",
    "sagemaker-a2i-runtime",
    "sagemaker-edge",
    "sagemaker-featurestore-runtime",
    "sagemaker-geospatial",
    "sagemaker-metrics",
    "sagemaker-runtime",
    "savingsplans",
    "scheduler",
    "schemas",
    "sdb",
    "secretsmanager",
    "securityhub",
    "securitylake",
    "serverlessrepo",
    "service-quotas",
    "servicecatalog",
    "servicecatalog-appregistry",
    "servicediscovery",
    "ses",
    "sesv2",
    "shield",
    "signer",
    "simspaceweaver",
    "sms",
    "sms-voice",
    "snow-device-management",
    "snowball",
    "sns",
    "sqs",
    "ssm",
    "ssm-contacts",
    "ssm-incidents",
    "ssm-sap",
    "sso",
    "sso-admin",
    "sso-oidc",
    "stepfunctions",
    "storagegateway",
    "sts",
    "supplychain",
    "support",
    "support-app",
    "swf",
    "synthetics",
    "taxsettings",
    "textract",
    "timestream-influxdb",
    "timestream-query",
    "timestream-write",
    "tnb",
    "transcribe",
    "transfer",
    "translate",
    "trustedadvisor",
    "verifiedpermissions",
    "voice-id",
    "vpc-lattice",
    "waf",
    "waf-regional",
    "wafv2",
    "wellarchitected",
    "wisdom",
    "workdocs",
    "worklink",
    "workmail",
    "workmailmessageflow",
    "workspaces",
    "workspaces-thin-client",
    "workspaces-web",
    "xray",]
ResourceServiceName = Literal["cloudformation",
    "cloudwatch",
    "dynamodb",
    "ec2",
    "glacier",
    "iam",
    "opsworks",
    "s3",
    "sns",
    "sqs",]
PaginatorName = Literal["describe_account_modifications",
    "describe_ip_groups",
    "describe_workspace_bundles",
    "describe_workspace_directories",
    "describe_workspace_images",
    "describe_workspaces",
    "describe_workspaces_connection_status",
    "list_account_links",
    "list_available_management_cidr_ranges",]
RegionName = Literal["af-south-1",
    "ap-northeast-1",
    "ap-northeast-2",
    "ap-south-1",
    "ap-southeast-1",
    "ap-southeast-2",
    "ca-central-1",
    "eu-central-1",
    "eu-west-1",
    "eu-west-2",
    "il-central-1",
    "sa-east-1",
    "us-east-1",
    "us-west-2",]
BlobTypeDef = Union[str, bytes, IO[Any]]
WorkspacePropertiesUnionTypeDef = Union[   'WorkspacePropertiesTypeDef', 'WorkspacePropertiesExtraOutputTypeDef' ]
StandbyWorkspaceUnionTypeDef = Union['StandbyWorkspaceTypeDef', 'StandbyWorkspaceOutputTypeDef']
StreamingPropertiesUnionTypeDef = Union[   'StreamingPropertiesTypeDef', 'StreamingPropertiesExtraOutputTypeDef' ]
WorkspaceRequestUnionTypeDef = Union['WorkspaceRequestTypeDef', 'WorkspaceRequestOutputTypeDef']
