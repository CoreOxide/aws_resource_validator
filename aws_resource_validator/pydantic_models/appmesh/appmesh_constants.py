from typing import Literal
from datetime import datetime


AppMeshServiceName = Literal['appmesh']
DefaultGatewayRouteRewriteType = Literal['DISABLED', 'ENABLED']
DnsResponseTypeType = Literal['ENDPOINTS', 'LOADBALANCER']
DurationUnitType = Literal['ms', 's']
EgressFilterTypeType = Literal['ALLOW_ALL', 'DROP_ALL']
GatewayRouteStatusCodeType = Literal['ACTIVE', 'DELETED', 'INACTIVE']
GrpcRetryPolicyEventType = Literal['cancelled', 'deadline-exceeded', 'internal', 'resource-exhausted', 'unavailable']
HttpMethodType = Literal['CONNECT', 'DELETE', 'GET', 'HEAD', 'OPTIONS', 'PATCH', 'POST', 'PUT', 'TRACE']
HttpSchemeType = Literal['http', 'https']
IpPreferenceType = Literal['IPv4_ONLY', 'IPv4_PREFERRED', 'IPv6_ONLY', 'IPv6_PREFERRED']
ListGatewayRoutesPaginatorName = Literal['list_gateway_routes']
ListMeshesPaginatorName = Literal['list_meshes']
ListRoutesPaginatorName = Literal['list_routes']
ListTagsForResourcePaginatorName = Literal['list_tags_for_resource']
ListVirtualGatewaysPaginatorName = Literal['list_virtual_gateways']
ListVirtualNodesPaginatorName = Literal['list_virtual_nodes']
ListVirtualRoutersPaginatorName = Literal['list_virtual_routers']
ListVirtualServicesPaginatorName = Literal['list_virtual_services']
ListenerTlsModeType = Literal['DISABLED', 'PERMISSIVE', 'STRICT']
MeshStatusCodeType = Literal['ACTIVE', 'DELETED', 'INACTIVE']
PaginatorName = Literal['list_gateway_routes', 'list_meshes', 'list_routes', 'list_tags_for_resource', 'list_virtual_gateways', 'list_virtual_nodes', 'list_virtual_routers', 'list_virtual_services']
PortProtocolType = Literal['grpc', 'http', 'http2', 'tcp']
RegionName = Literal['af-south-1', 'ap-east-1', 'ap-northeast-1', 'ap-northeast-2', 'ap-northeast-3', 'ap-south-1', 'ap-southeast-1', 'ap-southeast-2', 'ap-southeast-3', 'ca-central-1', 'eu-central-1', 'eu-central-2', 'eu-north-1', 'eu-south-1', 'eu-south-2', 'eu-west-1', 'eu-west-2', 'eu-west-3', 'il-central-1', 'me-south-1', 'sa-east-1', 'us-east-1', 'us-east-2', 'us-west-1', 'us-west-2']
ResourceServiceName = Literal['cloudformation', 'cloudwatch', 'dynamodb', 'ec2', 'glacier', 'iam', 'opsworks', 's3', 'sns', 'sqs']
RouteStatusCodeType = Literal['ACTIVE', 'DELETED', 'INACTIVE']
ServiceName = Literal['accessanalyzer', 'account', 'acm', 'acm-pca', 'amp', 'amplify', 'amplifybackend', 'amplifyuibuilder', 'apigateway', 'apigatewaymanagementapi', 'apigatewayv2', 'appconfig', 'appconfigdata', 'appfabric', 'appflow', 'appintegrations', 'application-autoscaling', 'application-insights', 'application-signals', 'applicationcostprofiler', 'appmesh', 'apprunner', 'appstream', 'appsync', 'apptest', 'arc-zonal-shift', 'artifact', 'athena', 'auditmanager', 'autoscaling', 'autoscaling-plans', 'b2bi', 'backup', 'backup-gateway', 'backupsearch', 'batch', 'bcm-data-exports', 'bcm-pricing-calculator', 'bedrock', 'bedrock-agent', 'bedrock-agent-runtime', 'bedrock-data-automation', 'bedrock-data-automation-runtime', 'bedrock-runtime', 'billing', 'billingconductor', 'braket', 'budgets', 'ce', 'chatbot', 'chime', 'chime-sdk-identity', 'chime-sdk-media-pipelines', 'chime-sdk-meetings', 'chime-sdk-messaging', 'chime-sdk-voice', 'cleanrooms', 'cleanroomsml', 'cloud9', 'cloudcontrol', 'clouddirectory', 'cloudformation', 'cloudfront', 'cloudfront-keyvaluestore', 'cloudhsm', 'cloudhsmv2', 'cloudsearch', 'cloudsearchdomain', 'cloudtrail', 'cloudtrail-data', 'cloudwatch', 'codeartifact', 'codebuild', 'codecatalyst', 'codecommit', 'codeconnections', 'codedeploy', 'codeguru-reviewer', 'codeguru-security', 'codeguruprofiler', 'codepipeline', 'codestar-connections', 'codestar-notifications', 'cognito-identity', 'cognito-idp', 'cognito-sync', 'comprehend', 'comprehendmedical', 'compute-optimizer', 'config', 'connect', 'connect-contact-lens', 'connectcampaigns', 'connectcampaignsv2', 'connectcases', 'connectparticipant', 'controlcatalog', 'controltower', 'cost-optimization-hub', 'cur', 'customer-profiles', 'databrew', 'dataexchange', 'datapipeline', 'datasync', 'datazone', 'dax', 'deadline', 'detective', 'devicefarm', 'devops-guru', 'directconnect', 'discovery', 'dlm', 'dms', 'docdb', 'docdb-elastic', 'drs', 'ds', 'ds-data', 'dsql', 'dynamodb', 'dynamodbstreams', 'ebs', 'ec2', 'ec2-instance-connect', 'ecr', 'ecr-public', 'ecs', 'efs', 'eks', 'eks-auth', 'elasticache', 'elasticbeanstalk', 'elastictranscoder', 'elb', 'elbv2', 'emr', 'emr-containers', 'emr-serverless', 'entityresolution', 'es', 'events', 'evidently', 'finspace', 'finspace-data', 'firehose', 'fis', 'fms', 'forecast', 'forecastquery', 'frauddetector', 'freetier', 'fsx', 'gamelift', 'geo-maps', 'geo-places', 'geo-routes', 'glacier', 'globalaccelerator', 'glue', 'grafana', 'greengrass', 'greengrassv2', 'groundstation', 'guardduty', 'health', 'healthlake', 'iam', 'identitystore', 'imagebuilder', 'importexport', 'inspector', 'inspector-scan', 'inspector2', 'internetmonitor', 'invoicing', 'iot', 'iot-data', 'iot-jobs-data', 'iotanalytics', 'iotdeviceadvisor', 'iotevents', 'iotevents-data', 'iotfleethub', 'iotfleetwise', 'iotsecuretunneling', 'iotsitewise', 'iotthingsgraph', 'iottwinmaker', 'iotwireless', 'ivs', 'ivs-realtime', 'ivschat', 'kafka', 'kafkaconnect', 'kendra', 'kendra-ranking', 'keyspaces', 'kinesis', 'kinesis-video-archived-media', 'kinesis-video-media', 'kinesis-video-signaling', 'kinesis-video-webrtc-storage', 'kinesisanalytics', 'kinesisanalyticsv2', 'kinesisvideo', 'kms', 'lakeformation', 'lambda', 'launch-wizard', 'lex-models', 'lex-runtime', 'lexv2-models', 'lexv2-runtime', 'license-manager', 'license-manager-linux-subscriptions', 'license-manager-user-subscriptions', 'lightsail', 'location', 'logs', 'lookoutequipment', 'lookoutmetrics', 'lookoutvision', 'm2', 'machinelearning', 'macie2', 'mailmanager', 'managedblockchain', 'managedblockchain-query', 'marketplace-agreement', 'marketplace-catalog', 'marketplace-deployment', 'marketplace-entitlement', 'marketplace-reporting', 'marketplacecommerceanalytics', 'mediaconnect', 'mediaconvert', 'medialive', 'mediapackage', 'mediapackage-vod', 'mediapackagev2', 'mediastore', 'mediastore-data', 'mediatailor', 'medical-imaging', 'memorydb', 'meteringmarketplace', 'mgh', 'mgn', 'migration-hub-refactor-spaces', 'migrationhub-config', 'migrationhuborchestrator', 'migrationhubstrategy', 'mq', 'mturk', 'mwaa', 'neptune', 'neptune-graph', 'neptunedata', 'network-firewall', 'networkflowmonitor', 'networkmanager', 'networkmonitor', 'notifications', 'notificationscontacts', 'oam', 'observabilityadmin', 'omics', 'opensearch', 'opensearchserverless', 'opsworks', 'opsworkscm', 'organizations', 'osis', 'outposts', 'panorama', 'partnercentral-selling', 'payment-cryptography', 'payment-cryptography-data', 'pca-connector-ad', 'pca-connector-scep', 'pcs', 'personalize', 'personalize-events', 'personalize-runtime', 'pi', 'pinpoint', 'pinpoint-email', 'pinpoint-sms-voice', 'pinpoint-sms-voice-v2', 'pipes', 'polly', 'pricing', 'privatenetworks', 'proton', 'qapps', 'qbusiness', 'qconnect', 'qldb', 'qldb-session', 'quicksight', 'ram', 'rbin', 'rds', 'rds-data', 'redshift', 'redshift-data', 'redshift-serverless', 'rekognition', 'repostspace', 'resiliencehub', 'resource-explorer-2', 'resource-groups', 'resourcegroupstaggingapi', 'robomaker', 'rolesanywhere', 'route53', 'route53-recovery-cluster', 'route53-recovery-control-config', 'route53-recovery-readiness', 'route53domains', 'route53profiles', 'route53resolver', 'rum', 's3', 's3control', 's3outposts', 's3tables', 'sagemaker', 'sagemaker-a2i-runtime', 'sagemaker-edge', 'sagemaker-featurestore-runtime', 'sagemaker-geospatial', 'sagemaker-metrics', 'sagemaker-runtime', 'savingsplans', 'scheduler', 'schemas', 'sdb', 'secretsmanager', 'security-ir', 'securityhub', 'securitylake', 'serverlessrepo', 'service-quotas', 'servicecatalog', 'servicecatalog-appregistry', 'servicediscovery', 'ses', 'sesv2', 'shield', 'signer', 'simspaceweaver', 'sms', 'sms-voice', 'snow-device-management', 'snowball', 'sns', 'socialmessaging', 'sqs', 'ssm', 'ssm-contacts', 'ssm-incidents', 'ssm-quicksetup', 'ssm-sap', 'sso', 'sso-admin', 'sso-oidc', 'stepfunctions', 'storagegateway', 'sts', 'supplychain', 'support', 'support-app', 'swf', 'synthetics', 'taxsettings', 'textract', 'timestream-influxdb', 'timestream-query', 'timestream-write', 'tnb', 'transcribe', 'transfer', 'translate', 'trustedadvisor', 'verifiedpermissions', 'voice-id', 'vpc-lattice', 'waf', 'waf-regional', 'wafv2', 'wellarchitected', 'wisdom', 'workdocs', 'workmail', 'workmailmessageflow', 'workspaces', 'workspaces-thin-client', 'workspaces-web', 'xray']
TcpRetryPolicyEventType = Literal['connection-error']
VirtualGatewayListenerTlsModeType = Literal['DISABLED', 'PERMISSIVE', 'STRICT']
VirtualGatewayPortProtocolType = Literal['grpc', 'http', 'http2']
VirtualGatewayStatusCodeType = Literal['ACTIVE', 'DELETED', 'INACTIVE']
VirtualNodeStatusCodeType = Literal['ACTIVE', 'DELETED', 'INACTIVE']
VirtualRouterStatusCodeType = Literal['ACTIVE', 'DELETED', 'INACTIVE']
VirtualServiceStatusCodeType = Literal['ACTIVE', 'DELETED', 'INACTIVE']