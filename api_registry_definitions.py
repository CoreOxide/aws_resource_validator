from validator import Service

from validator import APIObject

from validator import APIRegistry

class Accessanalyzer(Service):
    def __init__(self):
        super().__init__('Accessanalyzer')
        self.AccessPointArn = APIObject('AccessPointArn', 'string', r'arn:[^:]*:s3:[^:]*:[^:]*:accesspoint/.*', None, None)
        self.add_api_object('AccessPointArn', self.AccessPointArn)
        self.AccessPreviewId = APIObject('AccessPreviewId', 'string', r'[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}', None, None)
        self.add_api_object('AccessPreviewId', self.AccessPreviewId)
        self.AnalyzerArn = APIObject('AnalyzerArn', 'string', r'[^:]*:[^:]*:[^:]*:[^:]*:[^:]*:analyzer/.{1,255}', None, None)
        self.add_api_object('AnalyzerArn', self.AnalyzerArn)
        self.CloudTrailArn = APIObject('CloudTrailArn', 'string', r'arn:[^:]*:cloudtrail:[^:]*:[^:]*:trail/.{1,576}', None, None)
        self.add_api_object('CloudTrailArn', self.CloudTrailArn)
        self.Name = APIObject('Name', 'string', r'[A-Za-z][A-Za-z0-9_.-]*', 1, 255)
        self.add_api_object('Name', self.Name)
        self.PrincipalArn = APIObject('PrincipalArn', 'string', r'arn:[^:]*:iam::[^:]*:(role|user)/.{1,576}', None, None)
        self.add_api_object('PrincipalArn', self.PrincipalArn)
        self.ResourceArn = APIObject('ResourceArn', 'string', r'arn:[^:]*:[^:]*:[^:]*:[^:]*:.*', None, None)
        self.add_api_object('ResourceArn', self.ResourceArn)
        self.RoleArn = APIObject('RoleArn', 'string', r'arn:[^:]*:iam::[^:]*:role/.{1,576}', None, None)
        self.add_api_object('RoleArn', self.RoleArn)
        self.VpcId = APIObject('VpcId', 'string', r'vpc-([0-9a-f]){8}(([0-9a-f]){9})?', None, None)
        self.add_api_object('VpcId', self.VpcId)

class Account(Service):
    def __init__(self):
        super().__init__('Account')
        self.AccountId = APIObject('AccountId', 'string', r'^\d{12}$', None, None)
        self.add_api_object('AccountId', self.AccountId)
        self.ContactInformationPhoneNumber = APIObject('ContactInformationPhoneNumber', 'string', r'^[+][\s0-9()-]+$', 1, 20)
        self.add_api_object('ContactInformationPhoneNumber', self.ContactInformationPhoneNumber)
        self.EmailAddress = APIObject('EmailAddress', 'string', r'^[\s]*[\w+=.#|!&-]+@[\w.-]+\.[\w]+[\s]*$', 1, 254)
        self.add_api_object('EmailAddress', self.EmailAddress)
        self.PhoneNumber = APIObject('PhoneNumber', 'string', r'^[\s0-9()+-]+$', 1, 25)
        self.add_api_object('PhoneNumber', self.PhoneNumber)

class AcmPca(Service):
    def __init__(self):
        super().__init__('AcmPca')
        self.ASN1PrintableString64 = APIObject('ASN1PrintableString64', 'string', r'[a-zA-Z0-9\'()+-.?:/= ]*', 0, 64)
        self.add_api_object('ASN1PrintableString64', self.ASN1PrintableString64)
        self.AWSPolicy = APIObject('AWSPolicy', 'string', r'[\u0009\u000A\u000D\u0020-\u00FF]+', 1, 20480)
        self.add_api_object('AWSPolicy', self.AWSPolicy)
        self.AccountId = APIObject('AccountId', 'string', r'[0-9]+', 12, 12)
        self.add_api_object('AccountId', self.AccountId)
        self.Arn = APIObject('Arn', 'string', r'arn:[\w+=/,.@-]+:acm-pca:[\w+=/,.@-]*:[0-9]*:[\w+=,.@-]+(/[\w+=,.@-]+)*', 5, 200)
        self.add_api_object('Arn', self.Arn)
        self.AuditReportId = APIObject('AuditReportId', 'string', r'[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}', 36, 36)
        self.add_api_object('AuditReportId', self.AuditReportId)
        self.Base64String1To4096 = APIObject('Base64String1To4096', 'string', r'^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$', 1, 4096)
        self.add_api_object('Base64String1To4096', self.Base64String1To4096)
        self.CnameString = APIObject('CnameString', 'string', r'^[-a-zA-Z0-9;/?:@&=+$,%_.!~*()\']*$', 0, 253)
        self.add_api_object('CnameString', self.CnameString)
        self.CountryCodeString = APIObject('CountryCodeString', 'string', r'[A-Za-z]{2}', 2, 2)
        self.add_api_object('CountryCodeString', self.CountryCodeString)
        self.CustomObjectIdentifier = APIObject('CustomObjectIdentifier', 'string', r'^([0-2])\.([0-9]|([0-3][0-9]))((\.([0-9]+)){0,126})$', 0, 64)
        self.add_api_object('CustomObjectIdentifier', self.CustomObjectIdentifier)
        self.IdempotencyToken = APIObject('IdempotencyToken', 'string', r'[\u0009\u000A\u000D\u0020-\u00FF]*', 1, 36)
        self.add_api_object('IdempotencyToken', self.IdempotencyToken)
        self.Principal = APIObject('Principal', 'string', r'^[^*]+$', 0, 128)
        self.add_api_object('Principal', self.Principal)
        self.S3BucketName3To255 = APIObject('S3BucketName3To255', 'string', r'^[-a-zA-Z0-9._/]+$', 3, 255)
        self.add_api_object('S3BucketName3To255', self.S3BucketName3To255)
        self.TagKey = APIObject('TagKey', 'string', r'^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$', 1, 128)
        self.add_api_object('TagKey', self.TagKey)
        self.TagValue = APIObject('TagValue', 'string', r'^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$', 0, 256)
        self.add_api_object('TagValue', self.TagValue)

class Acm(Service):
    def __init__(self):
        super().__init__('Acm')
        self.Arn = APIObject('Arn', 'string', r'arn:[\w+=/,.@-]+:acm:[\w+=/,.@-]*:[0-9]+:[\w+=,.@-]+(/[\w+=,.@-]+)*', 20, 2048)
        self.add_api_object('Arn', self.Arn)
        self.CertificateBody = APIObject('CertificateBody', 'string', r'-{5}BEGIN CERTIFICATE-{5}\u000D?\u000A([A-Za-z0-9/+]{64}\u000D?\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\u000D?\u000A-{5}END CERTIFICATE-{5}(\u000D?\u000A)?', 1, 32768)
        self.add_api_object('CertificateBody', self.CertificateBody)
        self.CertificateChain = APIObject('CertificateChain', 'string', r'(-{5}BEGIN CERTIFICATE-{5}\u000D?\u000A([A-Za-z0-9/+]{64}\u000D?\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\u000D?\u000A-{5}END CERTIFICATE-{5}\u000D?\u000A)*-{5}BEGIN CERTIFICATE-{5}\u000D?\u000A([A-Za-z0-9/+]{64}\u000D?\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\u000D?\u000A-{5}END CERTIFICATE-{5}(\u000D?\u000A)?', 1, 2097152)
        self.add_api_object('CertificateChain', self.CertificateChain)
        self.DomainNameString = APIObject('DomainNameString', 'string', r'^(\*\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$', 1, 253)
        self.add_api_object('DomainNameString', self.DomainNameString)
        self.IdempotencyToken = APIObject('IdempotencyToken', 'string', r'\w+', 1, 32)
        self.add_api_object('IdempotencyToken', self.IdempotencyToken)
        self.NextToken = APIObject('NextToken', 'string', r'[\u0009\u000A\u000D\u0020-\u00FF]*', 1, 10000)
        self.add_api_object('NextToken', self.NextToken)
        self.PcaArn = APIObject('PcaArn', 'string', r'arn:[\w+=/,.@-]+:acm-pca:[\w+=/,.@-]*:[0-9]+:[\w+=,.@-]+(/[\w+=,.@-]+)*', 20, 2048)
        self.add_api_object('PcaArn', self.PcaArn)
        self.PrivateKey = APIObject('PrivateKey', 'string', r'-{5}BEGIN PRIVATE KEY-{5}\u000D?\u000A([A-Za-z0-9/+]{64}\u000D?\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\u000D?\u000A-{5}END PRIVATE KEY-{5}(\u000D?\u000A)?', 1, 524288)
        self.add_api_object('PrivateKey', self.PrivateKey)
        self.TagKey = APIObject('TagKey', 'string', r'[\p{L}\p{Z}\p{N}_.:\/=+\-@]*', 1, 128)
        self.add_api_object('TagKey', self.TagKey)
        self.TagValue = APIObject('TagValue', 'string', r'[\p{L}\p{Z}\p{N}_.:\/=+\-@]*', 0, 256)
        self.add_api_object('TagValue', self.TagValue)

api_registry = APIRegistry()
accessanalyzer = Accessanalyzer()
api_registry.add_service(accessanalyzer)
account = Account()
api_registry.add_service(account)
acmpca = AcmPca()
api_registry.add_service(acmpca)
acm = Acm()
api_registry.add_service(acm)
